{"version":3,"file":"static/js/4794.e8845584.chunk.js","mappings":"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","sources":["views/pages/register/OTP.js"],"sourcesContent":["import React from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CAlert } from \"@coreui/react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst OTP = () => {\n  const navigate = useNavigate();\n\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n  // const handleShowAlertSuccess = (event) => {\n  //   setShowAlertSuccess(false);\n  // };\n\n  const [showAlertFail, setShowAlertFail] = useState(false);\n  // const handleShowAlertFail = (event) => {\n  //   setShowAlertFail(false);\n  // };\n\n  const [showAlertEmpty, setShowAlertEmpty] = useState(false);\n  // const handleShowAlertEmpty = (event) => {\n  //   setShowAlertEmpty(false);\n  // };\n\n  const [otp, setOtp] = useState(\"\");\n  const handleOtp = (event) => {\n    setOtp(event.target.value);\n  };\n\n\n  const clearAllEntries = () => {\n    setOtp(\"\");\n  };\n\n  const submitted = (event) => {\n    if(otp === \"\")\n    {\n      setShowAlertEmpty(true)\n      setShowAlertFail(false)\n      setShowAlertSuccess(false)\n      return\n    }\n    // let formData = new FormData();\n\n    // formData.append(\"mailId\", JSON.parse(localStorage.getItem('register')).email);\n    // formData.append(\"OTP\", otp);\n\n    axios.post(process.env.REACT_APP_BACKEND_API_URL+\"verifyMail?\"+\"mailId=\"+ JSON.parse(localStorage.getItem('register')).email+\"&\"+\"OTP=\"+ otp)\n    .then((res) => {\n      console.log(res);\n      if (res.status == \"200\") {\n        setShowAlertSuccess(true);\n        setShowAlertEmpty(false)\n        setShowAlertFail(false)\n        navigate('/login');\n      } else {\n        setShowAlertFail(true);\n        setShowAlertSuccess(false);\n        setShowAlertEmpty(false)\n      }\n    })\n    .catch((err) => {});\n\n    clearAllEntries();\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={false}\n                    color=\"danger\"\n                    visible={showAlertEmpty}\n                  >\n                    OTP Field Can't Be Empty!\n                  </CAlert>\n                </div>\n\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={false}\n                    color=\"success\"\n                    visible={showAlertSuccess}\n                  >\n                    OTP Verified Sucessfully!\n                  </CAlert>\n                </div>\n\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={false}\n                    color=\"danger\"\n                    visible={showAlertFail}\n                  >\n                    OTP Verification Failed!\n                  </CAlert>\n                </div>\n\n                <CForm onSubmit={submitted}>\n                  <h1>OTP Verification</h1>\n                  <p className=\"text-medium-emphasis\">We have sent a verification OTP on your email.</p>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"OTP\"\n                      // autoComplete=\"OTP\"\n                      value={otp}\n                      onChange={handleOtp}\n                    />\n                  </CInputGroup>\n\n                  <div className=\"d-grid\">\n                    <CButton type=\"submit\" color=\"success\">\n                      Verify OTP\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default OTP;\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showAlertSuccess","setShowAlertSuccess","_useState3","_useState4","showAlertFail","setShowAlertFail","_useState5","_useState6","showAlertEmpty","setShowAlertEmpty","_useState7","_useState8","otp","setOtp","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","_jsxs","CCardBody","CAlert","dismissible","color","visible","CForm","onSubmit","event","axios","process","JSON","parse","localStorage","getItem","email","then","res","console","log","status","catch","err","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","value","onChange","target","CButton","type"],"sourceRoot":""}