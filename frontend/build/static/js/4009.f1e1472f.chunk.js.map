{"version":3,"file":"static/js/4009.f1e1472f.chunk.js","mappings":"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","sources":["views/pages/register/Register.js"],"sourcesContent":["import React from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CAlert } from \"@coreui/react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n  const handleShowAlertSuccess = (event) => {\n    setShowAlertSuccess(false);\n  };\n\n  const [showAlertFail, setShowAlertFail] = useState(false);\n  const handleShowAlertFail = (event) => {\n    setShowAlertFail(false);\n  };\n\n  const [showAlertEmpty, setShowAlertEmpty] = useState(false);\n  // const handleShowAlertEmpty = (event) => {\n  //   setShowAlertEmpty(false);\n  // };\n\n  const [username, setUserName] = useState(\"\");\n  const handleUserName = (event) => {\n    setUserName(event.target.value);\n  };\n\n  const [firstName, setFirstName] = useState(\"\");\n  const handleFirstName = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const [lastName, setLastName] = useState(\"\");\n  const handleLastName = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const [password, setPassword] = useState(\"\");\n  const handlePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const [email, setEmail] = useState(\"\");\n  const handleEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const clearAllEntries = () => {\n    setUserName(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setPassword(\"\");\n    setEmail(\"\");\n  };\n\n  const submitted = (event) => {\n    if(username === \"\" || firstName === \"\" || lastName === \"\" || password === \"\" || email === \"\")\n    {\n      setShowAlertEmpty(true)\n      setShowAlertFail(false)\n      setShowAlertSuccess(false)\n      return\n    }\n    \n    let formData = new FormData();\n    formData.append(\"userName\", username);\n    formData.append(\"userFirstName\", firstName);\n    formData.append(\"userLastName\", lastName);\n    formData.append(\"userPassword\", password);\n    formData.append(\"mailID\", email);\n\n    axios({\n      url: process.env.REACT_APP_BACKEND_API_URL+\"registerNewUser\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: formData,\n    })\n      .then((res) => {\n        console.log(res);       \n        if (res.status == \"200\") {\n          localStorage.setItem('register', JSON.stringify({ username: username,email: email}))\n          setShowAlertSuccess(true);\n          setShowAlertEmpty(false)\n          setShowAlertFail(false)\n          navigate('/otp');\n        } else {\n          setShowAlertFail(true);\n          setShowAlertSuccess(false);\n          setShowAlertEmpty(false)\n        }\n      })\n      .catch((err) => {\n        setShowAlertFail(true);\n        setShowAlertSuccess(false);\n        setShowAlertEmpty(false)\n    });\n\n    clearAllEntries();\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={false}\n                    color=\"danger\"\n                    visible={showAlertEmpty}\n                  >\n                    None of the Fields Below Can Be Empty!\n                  </CAlert>\n                </div>\n\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={false}\n                    color=\"success\"\n                    visible={showAlertSuccess}\n                  >\n                    User Registered Sucessfully!\n                  </CAlert>\n                </div>\n\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={false}\n                    color=\"danger\"\n                    visible={showAlertFail}\n                  >\n                    User Registration Failed!\n                  </CAlert>\n                </div>\n\n                <CForm onSubmit={submitted}>\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Roll Number\"\n                      autoComplete=\"username\"\n                      value={username}\n                      onChange={handleUserName}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n\n                    <CFormInput\n                      placeholder=\"First Name\"\n                      value={firstName}\n                      onChange={handleFirstName}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n\n                    <CFormInput\n                      placeholder=\"Last Name\"\n                      value={lastName}\n                      onChange={handleLastName}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      value={email}\n                      onChange={handleEmail}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      value={password}\n                      onChange={handlePassword}\n                    />\n                  </CInputGroup>\n\n                  <div className=\"d-grid\">\n                    <CButton type=\"submit\" color=\"success\">\n                      Create Account\n                    </CButton>\n                  </div>\n                  <div className=\"right-button\">\n                    <Link to=\"/login\">\n                      <CButton color=\"link\" className=\"text-right px-0 \">\n                        Login Instead?\n                      </CButton>\n                    </Link>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showAlertSuccess","setShowAlertSuccess","_useState3","_useState4","showAlertFail","setShowAlertFail","_useState5","_useState6","showAlertEmpty","setShowAlertEmpty","_useState7","_useState8","username","setUserName","_useState9","_useState10","firstName","setFirstName","_useState11","_useState12","lastName","setLastName","_useState13","_useState14","password","setPassword","_useState15","_useState16","email","setEmail","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","_jsxs","CCardBody","CAlert","dismissible","color","visible","CForm","onSubmit","event","formData","FormData","append","axios","url","process","method","headers","Accept","data","then","res","console","log","status","localStorage","setItem","JSON","stringify","catch","err","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","target","cilLockLocked","type","CButton","Link","to"],"sourceRoot":""}