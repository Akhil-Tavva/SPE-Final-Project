{"version":3,"file":"static/js/9840.a2dc2e28.chunk.js","mappings":"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","sources":["views/dashboard/CourierManagementAdminRecieve.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  cilLockLocked,\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n  cilBowling,\n  cilBorderAll,\n  cilLoop,\n  cilInbox,\n} from \"@coreui/icons\";\n\n// import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport dayjs from \"dayjs\";\nimport { DemoContainer, DemoItem } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\n\nconst Dashboard = () => {\n  const [value, setValue] = React.useState(dayjs(\"2022-04-17T15:30\"));\n\n  const [tableExample, setTableExample] = useState([]);\n\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n  const handleShowAlertSuccess = (event) => {\n    setShowAlertSuccess(false);\n  };\n\n  const [showAlertFail, setShowAlertFail] = useState(false);\n  const handleShowAlertFail = (event) => {\n    setShowAlertFail(false);\n  };\n\n  const [cid, setCID] = useState(\"\");\n  const handleCID = (event) => {\n    setCID(event.target.value);\n  };\n\n  const [username, setUserName] = useState(\"\");\n  const handleUserName = (event) => {\n    setUserName(event.target.value);\n  };\n\n  const [firstName, setFirstName] = useState(\"\");\n  const handleFirstName = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const [lastName, setLastName] = useState(\"\");\n  const handleLastName = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const [date, setDate] = useState(\"\");\n  const handleDate = (event) => {\n    setDate(event.target.value);\n  };\n\n  const [time, setTime] = useState(\"\");\n  const handleTime = (event) => {\n    setTime(event.target.value);\n  };\n\n  const [company, setCompany] = useState(\"\");\n  const handleCompany = (event) => {\n    setCompany(event.target.value);\n  };\n\n  const refresh = () => {\n    handleUpload();\n  };\n\n  const handleUpload = () => {\n    console.log(value.$d.toJSON().substring(0, value.$d.toJSON().indexOf(\"T\")));\n    console.log(\n      value.$d.toTimeString().substring(0, value.$d.toTimeString().indexOf(\" \"))\n    );\n\n    let formData = new FormData();\n    formData.append(\"courierID\", cid);\n    formData.append(\"receiverName\", firstName + \" \" + lastName);\n    formData.append(\"status\", \"COMPLETE\");\n    formData.append(\"deliverDate\", value.$d.toJSON().substring(0, value.$d.toJSON().indexOf(\"T\")));\n    formData.append(\"deliverTime\", value.$d.toTimeString().substring(0, value.$d.toTimeString().indexOf(\" \")));\n    formData.append(\"receiverRollNo\", username);\n    axios({\n      url: process.env.REACT_APP_BACKEND_API_URL + \"updateCourier\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer \" + JSON.parse(localStorage.getItem(\"details\")).token,\n      },\n      data: formData,\n    })\n      .then((res) => {\n        setShowAlertSuccess(true);\n        setShowAlertFail(false);\n      })\n      .catch((err) => {\n        setShowAlertFail(true);\n        setShowAlertSuccess(false);\n      });\n  };\n\n  const submitted = () => {\n    handleUpload();\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={true}\n                    color=\"success\"\n                    visible={showAlertSuccess}\n                  >\n                    Courier Receiver Info Updated!\n                  </CAlert>\n                </div>\n\n                <div className=\"mt-2\">\n                  <CAlert\n                    dismissible={true}\n                    color=\"danger\"\n                    visible={showAlertFail}\n                  >\n                    Courier Update Failed!\n                  </CAlert>\n                </div>\n\n                <h1>Reciever Info Update</h1>\n                  <p className=\"text-medium-emphasis\">\n                    Enter the following details\n                  </p>\n\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                      <DemoContainer components={[\"DateTimePicker\"]}>\n                        {/* <DemoItem> */}\n                        {/* label=\"Responsive variant\"> */}\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <div\n                            style={{\n                              flex: \"1 1 auto\",\n                            }}\n                          ></div>\n                          <div className=\"d-flex flex-row align-items-center justify-content-center\">\n                            <DateTimePicker\n                              className=\"mb-3 d-flex flex-row align-items-center\"\n                              value={value}\n                              onChange={(newValue) => setValue(newValue)}\n                              defaultValue={dayjs(\"2022-04-17T15:30\")}\n                            />\n                          </div>\n                          <div\n                            style={{\n                              flex: \"1 1 auto\",\n                            }}\n                          ></div>\n                        </div>\n                        {/* </DemoItem> */}\n                      </DemoContainer>\n                    </LocalizationProvider>\n                    {/* Resource - https://mui.com/x/react-date-pickers/date-time-picker/ */}\n\n                <CForm onSubmit={submitted}>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Courier ID\"\n                      autoComplete=\"cid\"\n                      value={cid}\n                      onChange={handleCID}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Reciever Roll Number\"\n                      autoComplete=\"username\"\n                      value={username}\n                      onChange={handleUserName}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n\n                    <CFormInput\n                      placeholder=\"First Name\"\n                      value={firstName}\n                      onChange={handleFirstName}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n\n                    <CFormInput\n                      placeholder=\"Last Name\"\n                      value={lastName}\n                      onChange={handleLastName}\n                    />\n                  </CInputGroup>\n\n\n                  <div className=\"d-grid\">\n                    <CButton type=\"submit\" color=\"success\">\n                      Recieve Courier\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["_React$useState","React","dayjs","_React$useState2","_slicedToArray","value","setValue","_useState","useState","_useState2","_useState3","_useState4","showAlertSuccess","setShowAlertSuccess","_useState5","_useState6","showAlertFail","setShowAlertFail","_useState7","_useState8","cid","setCID","_useState9","_useState10","username","setUserName","_useState11","_useState12","firstName","setFirstName","_useState13","_useState14","lastName","setLastName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","handleUpload","console","log","$d","toJSON","substring","indexOf","toTimeString","formData","FormData","append","axios","url","process","method","headers","Accept","Authorization","JSON","parse","localStorage","getItem","token","data","then","res","catch","err","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","_jsxs","CCardBody","CAlert","dismissible","color","visible","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","style","display","flexDirection","flex","DateTimePicker","onChange","newValue","defaultValue","CForm","onSubmit","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","event","target","CButton","type"],"sourceRoot":""}