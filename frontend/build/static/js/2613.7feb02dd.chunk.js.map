{"version":3,"file":"static/js/2613.7feb02dd.chunk.js","mappings":"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","sources":["views/dashboard/CourierManagementAdminAdd.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  cilLockLocked,\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n  cilBowling,\n  cilBorderAll,\n  cilLoop,\n  cilInbox,\n} from \"@coreui/icons\";\n\n// import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport dayjs from \"dayjs\";\nimport { DemoContainer, DemoItem } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\n\nconst Dashboard = () => {\n\n  const [value, setValue] = React.useState(dayjs(\"2022-04-17T15:30\"));\n\n  const [tableExample, setTableExample] = useState([]);\n\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n  const handleShowAlertSuccess = (event) => {\n    setShowAlertSuccess(false);\n  };\n\n  const [showAlertFail, setShowAlertFail] = useState(false);\n  const handleShowAlertFail = (event) => {\n    setShowAlertFail(false);\n  };\n\n  const [username, setUserName] = useState(\"\");\n  const handleUserName = (event) => {\n    setUserName(event.target.value);\n  };\n\n  const [firstName, setFirstName] = useState(\"\");\n  const handleFirstName = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const [lastName, setLastName] = useState(\"\");\n  const handleLastName = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const [date, setDate] = useState(\"\");\n  const handleDate = (event) => {\n    setDate(event.target.value);\n  };\n\n  const [time, setTime] = useState(\"\");\n  const handleTime = (event) => {\n    setTime(event.target.value);\n  };\n\n  const [company, setCompany] = useState(\"\");\n  const handleCompany = (event) => {\n    setCompany(event.target.value);\n  };\n\n\n  const refresh = () =>\n  {\n    handleUpload();\n  }\n\n  const handleUpload = () => {\n\n    console.log(value.$d.toJSON().substring(0, value.$d.toJSON().indexOf(\"T\")));\n    console.log(\n      value.$d.toTimeString().substring(0, value.$d.toTimeString().indexOf(\" \"))\n    );\n    let formData = new FormData();\n    formData.append(\"owner\",firstName+\" \"+lastName);\n    formData.append(\"courierCompany\",company);\n    formData.append(\"arrivalDate\",value.$d.toJSON().substring(0, value.$d.toJSON().indexOf(\"T\")));\n    formData.append(\"arrivalTime\",value.$d.toTimeString().substring(0, value.$d.toTimeString().indexOf(\" \")));\n    formData.append(\"ownerRollNo\",username);\n    axios({\n      url: process.env.REACT_APP_BACKEND_API_URL+\"addCourier\",\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \"+JSON.parse(localStorage.getItem('details')).token\n      },\n      data: formData,\n    })\n      .then((res) =>\n      {\n        setShowAlertSuccess(true);\n        setShowAlertFail(false);\n      })\n      .catch((err) => { \n        setShowAlertFail(true);\n        setShowAlertSuccess(false);\n      });\n  };\n\n  const submitted = () => {\n    handleUpload();\n  }\n\n  return(\n  <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n  <CContainer>\n    <CRow className=\"justify-content-center\">\n      <CCol md={9} lg={7} xl={6}>\n        <CCard className=\"mx-4\">\n          <CCardBody className=\"p-4\">\n            <div className=\"mt-2\">\n              <CAlert\n                dismissible={true}\n                color=\"success\"\n                visible={showAlertSuccess}\n              >\n                Courier Added!\n              </CAlert>\n            </div>\n\n            <div className=\"mt-2\">\n              <CAlert\n                dismissible={true}\n                color=\"danger\"\n                visible={showAlertFail}\n              >\n                Courier Couldn't be added!\n              </CAlert>\n            </div>\n\n            <h1>Add a courier</h1>\n              <p className=\"text-medium-emphasis\">Enter the following details</p>\n\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                      <DemoContainer components={[\"DateTimePicker\"]}>\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <div\n                            style={{\n                              flex: \"1 1 auto\",\n                            }}\n                          ></div>\n                          <div className=\"d-flex flex-row align-items-center justify-content-center\">\n                            <DateTimePicker\n                              className=\"mb-3 d-flex flex-row align-items-center\"\n                              value={value}\n                              onChange={(newValue) => setValue(newValue)}\n                              defaultValue={dayjs(\"2022-04-17T15:30\")}\n                            />\n                          </div>\n                          <div\n                            style={{\n                              flex: \"1 1 auto\",\n                            }}\n                          ></div>\n                        </div>\n                      </DemoContainer>\n                    </LocalizationProvider>\n                    {/* Resource - https://mui.com/x/react-date-pickers/date-time-picker/ */}\n\n\n            <CForm onSubmit={submitted}>\n              \n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText>\n                  <CIcon icon={cilUser} />\n                </CInputGroupText>\n                <CFormInput\n                  placeholder=\"Owner Roll Number\"\n                  autoComplete=\"username\"\n                  value={username}\n                  onChange={handleUserName}\n                />\n              </CInputGroup>\n\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText>\n                  <CIcon icon={cilUser} />\n                </CInputGroupText>\n\n                <CFormInput\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={handleFirstName}\n                />\n              </CInputGroup>\n\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText>\n                  <CIcon icon={cilUser} />\n                </CInputGroupText>\n\n                <CFormInput\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={handleLastName}\n                />\n              </CInputGroup>\n\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText>\n                  <CIcon icon={cilUser} />\n                </CInputGroupText>\n\n                <CFormInput\n                  placeholder=\"Delivery Company\"\n                  value={company}\n                  onChange={handleCompany}\n                />\n              </CInputGroup>\n\n              <div className=\"d-grid\">\n                <CButton type=\"submit\" color=\"success\">\n                  Add Courier\n                </CButton>\n              </div>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>\n);\n};\n\nexport default Dashboard;\n"],"names":["_React$useState","React","dayjs","_React$useState2","_slicedToArray","value","setValue","_useState","useState","_useState2","_useState3","_useState4","showAlertSuccess","setShowAlertSuccess","_useState5","_useState6","showAlertFail","setShowAlertFail","_useState7","_useState8","username","setUserName","_useState9","_useState10","firstName","setFirstName","_useState11","_useState12","lastName","setLastName","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","company","setCompany","handleUpload","console","log","$d","toJSON","substring","indexOf","toTimeString","formData","FormData","append","axios","url","process","method","headers","JSON","parse","localStorage","getItem","token","data","then","res","catch","err","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","_jsxs","CCardBody","CAlert","dismissible","color","visible","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","style","display","flexDirection","flex","DateTimePicker","onChange","newValue","defaultValue","CForm","onSubmit","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","event","target","CButton","type"],"sourceRoot":""}